{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0", 
      "title": "Web3 Sandbox Backend",
      "description": "APIs: Dexscreener, CoinMarketCap, DefiLlama. SDKs: Alchemy",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/arbitrum/account/{account}/tokens": {
            "get": {
                "summary": "Get user wallet (utilizing the Alchemy SDK)",
                "description": "Returns the user's wallet balance.",
                "tags": ["Wallet"],
                "parameters": [
                    {
                    "name": "wallet",
                    "in": "path",
                    "description": "The wallet address to retrieve the wallet balance for.",
                    "required": true,
                    "type": "string",
                    "example": "0xEBe035dA5DF98E8297D31cFD1c249732a6d6d3bA"
                    }
                ],
                "responses": {
                "200": {
                    "description": "Successful response",
                    "schema": {
                    "type": "object",
                    "properties": {
                        "balance": {
                        "type": "number",
                        "description": "The user's wallet balance"
                        }
                    }
                    }
                }
                }
            }
        },
        "/api/arbitrum/account/{wallet}/transactions": {
            "get": {
                "summary": "Get transactions by user wallet (utilizing the Alchemy SDK)",
                "description": "Returns the user's wallet transactions.",
                "tags": ["Wallet"],
                "parameters": [
                    {
                        "name": "wallet",
                        "in": "path",
                        "description": "The wallet address to retrieve the wallet transactions for.",
                        "required": true,
                        "type": "string",
                        "example": "0xEBe035dA5DF98E8297D31cFD1c249732a6d6d3bA"
                    }
                ],
                "responses": {
                    "200": {
                    "description": "Successful response",
                    "schema": {
                        "type": "object",
                        "properties": {
                        "balance": {
                            "type": "number",
                            "description": "The user's wallet balance"
                        }
                        }
                    }
                    }
                }
            }
        },
        "/api/ethereum/account/{account}/tokens": {
            "get": {
                "summary": "Get user wallet (utilizing the Alchemy SDK)",
                "description": "Returns the user's wallet balance.",
                "tags": ["Wallet"],
                "parameters": [
                    {
                    "name": "wallet",
                    "in": "path",
                    "description": "The wallet address to retrieve the wallet balance for.",
                    "required": true,
                    "type": "string",
                    "example": "0xEBe035dA5DF98E8297D31cFD1c249732a6d6d3bA"
                    }
                ],
                "responses": {
                "200": {
                    "description": "Successful response",
                    "schema": {
                    "type": "object",
                    "properties": {
                        "balance": {
                        "type": "number",
                        "description": "The user's wallet balance"
                        }
                    }
                    }
                }
                }
            }
        },
        "/api/ethereum/account/{wallet}/transactions": {
            "get": {
                "summary": "Get transactions by user wallet (utilizing the Alchemy SDK)",
                "description": "Returns the user's wallet transactions.",
                "tags": ["Wallet"],
                "parameters": [
                    {
                        "name": "wallet",
                        "in": "path",
                        "description": "The wallet address to retrieve the wallet transactions for.",
                        "required": true,
                        "type": "string",
                        "example": "0xEBe035dA5DF98E8297D31cFD1c249732a6d6d3bA"
                    }
                ],
                "responses": {
                    "200": {
                    "description": "Successful response",
                    "schema": {
                        "type": "object",
                        "properties": {
                        "balance": {
                            "type": "number",
                            "description": "The user's wallet balance"
                        }
                        }
                    }
                    }
                }
            }
        },
        "/api/ethereum/token/pairs/{symbol}": {
            "get": {
                "summary": "Get transactions by user wallet (utilizing Dexscreener API)",
                "description": "Returns the user's wallet transactions.",
                "tags": ["Token"],
                "parameters": [
                    {
                        "name": "symbol",
                        "in": "path",
                        "description": "The symbol of the token to be retrieved.",
                        "required": true,
                        "type": "string",
                        "example": "WETH, WETH/USDT, 0x5023475230547"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "balance": {
                                    "type": "number",
                                    "description": "The user's wallet balance"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ethereum/token/categories": {
            "get": {
                "summary": "Get transactions by user wallet (utilizing Dexscreener API)",
                "description": "Returns the user's wallet transactions.",
                "tags": ["Token"],
                "parameters": [
                    {
                        "name": "symbol",
                        "in": "path",
                        "description": "The symbol of the token to be retrieved.",
                        "required": true,
                        "type": "string",
                        "example": "WETH, WETH/USDT, 0x5023475230547"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "balance": {
                                    "type": "number",
                                    "description": "The user's wallet balance"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "summary": "Get all Users",
                "description": "Returns all users.",
                "tags": ["User"],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "balance": {
                                    "type": "number",
                                    "description": "All Users"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create new user",
                "description": "Adds the new user to the database.",
                "tags": ["User"],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "balance": {
                                    "type": "number",
                                    "description": "All users"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Updates a user",
                "description": "Updates a user in the database.",
                "tags": ["User"],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "balance": {
                                    "type": "number",
                                    "description": "All users"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
      {
        "name": "User"
      },{
        "name": "Ethereum"
      },{
        "name": "Arbitrum"
      }
    ],
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"]
}